PA120180372 ¾ÈÈñ°æ20180109 ±è¼öºó# redis-serverFirst, we create a socket for the server side using socket(¡¦), and binded the socket with the IP address of the computer it is working on and port number 6379. Then, we prepared for the incoming connections using listen(¡¦). Then, we iterate ```1 [ accept(¡¦) -> 2[ read(¡¦) -> (parse the response from client) -> write(¡¦) ] ]. ```[ ] means that we iterate the process inside it. The first iteration (1[ ]) is to accept the attempt from client when there are several lines of commands, such as```set foo "This is a single argument"strlen foo```In the above command, we do two iterations.The second iteration (2[ ]) is for responses from the client larger than the buffer size that we can read. In our implementation, the maximum buffer size that can be read in one iteration is 1024 bytes.We parsed the request of clients based on six commands: PING, GET, SET, STRLEN, DEL, EXISTS. Then, we did what was requested and sent back the response following RESP format to the client using write(¡¦).# redis-clientWe created a socket for the client using socket(¡¦) and connected the socket with the host that was recognized by gethostbyname(HOST). HOST was given as input to main(¡¦). Then, we iterate```1[ read(¡¦) from stdin -> (parse the input) -> write(¡¦) -> 2[read(¡¦) -> (parse) -> write to stdout ] ]```The first iteration receives input from external source and parse the input into RESP format. We send the parsed request to the server. We read the response from the server and parse the response to print it as stdout. The first iteration is for large inputs, where the total input size exceeds the buffer size that client can receive. To enable this iteration, we parsed the input based on ¡°\n¡±. Then, we parsed the input into RESP format and sent the request to the server. We received the response from the server, and parsed the response and printed the output to stdout. When the response was bigger than certain amount, we iterated this process until all of the responses were read.